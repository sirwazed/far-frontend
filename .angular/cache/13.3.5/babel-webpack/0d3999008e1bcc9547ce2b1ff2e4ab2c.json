{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/user-service.service\";\nimport * as i3 from \"src/app/services/alertify.service\";\nimport * as i4 from \"src/app/services/registerapi.service\";\nimport * as i5 from \"@angular/common\";\n\nfunction UserRegisterComponent_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1, \" Please Provide Name \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UserRegisterComponent_span_16_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Please Provide Email Address \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UserRegisterComponent_span_16_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Please Provide Valid Email Address \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UserRegisterComponent_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtemplate(1, UserRegisterComponent_span_16_span_1_Template, 2, 0, \"span\", 16);\n    i0.ɵɵtemplate(2, UserRegisterComponent_span_16_span_2_Template, 2, 0, \"span\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.email.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.email.hasError(\"email\"));\n  }\n}\n\nfunction UserRegisterComponent_span_21_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Please Provide Password \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UserRegisterComponent_span_21_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Password should not be Lesser than 8 Character \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UserRegisterComponent_span_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtemplate(1, UserRegisterComponent_span_21_span_1_Template, 2, 0, \"span\", 16);\n    i0.ɵɵtemplate(2, UserRegisterComponent_span_21_span_2_Template, 2, 0, \"span\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.password.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.password.errors[\"minlength\"]);\n  }\n}\n\nfunction UserRegisterComponent_span_26_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Please Confirm Password \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UserRegisterComponent_span_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtemplate(1, UserRegisterComponent_span_26_span_1_Template, 2, 0, \"span\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.confirmPassword.hasError(\"required\"));\n  }\n}\n\nfunction UserRegisterComponent_span_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Password not Matched\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UserRegisterComponent_span_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1, \" Please Provide Phone Number \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let UserRegisterComponent = /*#__PURE__*/(() => {\n  class UserRegisterComponent {\n    constructor(fb, userService, alertify, register) {\n      this.fb = fb;\n      this.userService = userService;\n      this.alertify = alertify;\n      this.register = register;\n    }\n\n    ngOnInit() {\n      /*\r\n      this.registrationForm = new FormGroup(\r\n        {\r\n      userName: new FormControl(null,Validators.required),\r\n      email: new FormControl(null, [Validators.required, Validators.email]),\r\n      password: new FormControl(null, [Validators.required, Validators.minLength(8)]),\r\n      confirmPassword: new FormControl(null, [Validators.required]),\r\n      mobile: new FormControl(null, [Validators.required, Validators.maxLength(11), Validators.minLength(11)])\r\n        },this.passwordMatchingValidator);\r\n        */\n      this.createRegistrationForm();\n    }\n\n    createRegistrationForm() {\n      this.registrationForm = this.fb.group({\n        userName: [null, Validators.required],\n        email: [null, [Validators.required, Validators.email]],\n        password: [null, [Validators.required, Validators.minLength(8)]],\n        confirmPassword: [null, Validators.required],\n        mobile: [null, [Validators.required, Validators.minLength(11)]]\n      }, {\n        validators: this.passwordMatchingValidator\n      });\n    }\n\n    passwordMatchingValidator(fg) {\n      return fg.get('password').value === fg.get('confirmPassword').value ? null : {\n        notmatched: true\n      };\n    }\n\n    onSubmit() {// console.log(this.registrationForm.value);\n      // this.userSubmitted = true;\n      // if (this.registrationForm.valid) {\n      //   //this.user = Object.assign(this.user, this.registrationForm.value);\n      //   this.userService.addUser(this.userData());\n      //   this.registrationForm.reset();\n      //   this.userSubmitted = false;\n      //   this.alertify.success('Congrats! You have registered successfully');\n      // } else {\n      //   this.alertify.error('Please fill up the required fields');\n      // }\n    }\n\n    userData() {\n      return this.user = {\n        userName: this.userName.value,\n        email: this.email.value,\n        password: this.password.value,\n        mobile: this.mobile.value\n      };\n    } ///------------\n\n\n    get userName() {\n      return this.registrationForm.get('userName');\n    }\n\n    get email() {\n      return this.registrationForm.get('email');\n    }\n\n    get password() {\n      return this.registrationForm.get('password');\n    }\n\n    get confirmPassword() {\n      return this.registrationForm.get('confirmPassword');\n    }\n\n    get mobile() {\n      return this.registrationForm.get('mobile');\n    }\n\n    postdata() {\n      console.log(this.registrationForm.value);\n      this.userSubmitted = true;\n      this.register.register(this.registrationForm.value).subscribe(res => {\n        this.registrationForm.reset();\n        this.userSubmitted = false;\n        this.alertify.success('Congrats! You have registered successfully');\n      }, err => {\n        this.alertify.error('Please fill up the required fields');\n      });\n    }\n\n  }\n\n  UserRegisterComponent.ɵfac = function UserRegisterComponent_Factory(t) {\n    return new (t || UserRegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserServiceService), i0.ɵɵdirectiveInject(i3.AlertifyService), i0.ɵɵdirectiveInject(i4.RegisterapiService));\n  };\n\n  UserRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserRegisterComponent,\n    selectors: [[\"app-user-register\"]],\n    decls: 39,\n    vars: 7,\n    consts: [[1, \"row\"], [1, \"col-6\", \"m-auto\"], [1, \"card\", \"m-auto\"], [1, \"card-header\"], [1, \"card-body\"], [\"method\", \"POST\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"col-12\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"userName\", 1, \"form-control\"], [\"class\", \"error-block\", 4, \"ngIf\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"password\", 1, \"form-control\"], [\"for\", \"cpassword\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"confirmPassword\", 1, \"form-control\"], [4, \"ngIf\"], [\"for\", \"mobile\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"mobile\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"me-2\", 3, \"click\"], [\"type\", \"reset\", 1, \"btn\", \"btn-secondary\", \"ml-2\"], [1, \"error-block\"]],\n    template: function UserRegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵtext(4, \" Register \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function UserRegisterComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"label\", 7);\n        i0.ɵɵtext(9, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 8);\n        i0.ɵɵtemplate(11, UserRegisterComponent_span_11_Template, 2, 0, \"span\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 6)(13, \"label\", 10);\n        i0.ɵɵtext(14, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 11);\n        i0.ɵɵtemplate(16, UserRegisterComponent_span_16_Template, 3, 2, \"span\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 6)(18, \"label\", 12);\n        i0.ɵɵtext(19, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 13);\n        i0.ɵɵtemplate(21, UserRegisterComponent_span_21_Template, 3, 2, \"span\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 6)(23, \"label\", 14);\n        i0.ɵɵtext(24, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 15);\n        i0.ɵɵtemplate(26, UserRegisterComponent_span_26_Template, 2, 1, \"span\", 9);\n        i0.ɵɵtemplate(27, UserRegisterComponent_span_27_Template, 2, 0, \"span\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 6)(29, \"label\", 17);\n        i0.ɵɵtext(30, \"Mobile\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 18);\n        i0.ɵɵtemplate(32, UserRegisterComponent_span_32_Template, 2, 0, \"span\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"br\");\n        i0.ɵɵelementStart(34, \"div\", 6)(35, \"button\", 19);\n        i0.ɵɵlistener(\"click\", function UserRegisterComponent_Template_button_click_35_listener() {\n          return ctx.postdata();\n        });\n        i0.ɵɵtext(36, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"button\", 20);\n        i0.ɵɵtext(38, \"Cancel\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.registrationForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", !ctx.userName.valid && (ctx.userName.touched || ctx.userSubmitted));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", !ctx.email.valid && (ctx.email.touched || ctx.userSubmitted));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", !ctx.password.valid && (ctx.password.touched || ctx.userSubmitted));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", !ctx.confirmPassword.valid && (ctx.confirmPassword.touched || ctx.userSubmitted));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.registrationForm.hasError(\"notmatched\") && ctx.confirmPassword.valid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", !ctx.mobile.valid && (ctx.mobile.touched || ctx.userSubmitted));\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i5.NgIf],\n    styles: [\"\"]\n  });\n  return UserRegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}